@model CalendarE2.Domain.ViewModels.StartDayViewModel
@using CalendarE2.Domain.ViewModels
@{
    ViewData["Title"] = "Calendar Main Page";
}
<input id="initYr" value="@Model.Yr" type="hidden" />
<input id="initMo" value="@Model.Mo" type="hidden" />
<input id="initDay" value="@Model.Day" type="hidden" />
<input id="initTimeFrame" value="@Model.TimeFrame" type="hidden" />

<h1 class="appTitle">Core Calendar</h1>
<br />
<div class="row">
    <div style="display:inline-block">time frame: </div>
    <div class="col-1">
        <label for="timeFrameDay">Day</label>
        <input type="radio" id="timeFrameDay" name="TimeFrame" value="Day" />
    </div>
    <div class="col-1">
        <label for="timeFrameWeek">Week</label>
        <input type="radio" id="timeFrameWeek" name="TimeFrame" value="Week" />
    </div>
</div>

<div class="flex-container">
    <div class="leftside">
        <br />
        <br />
        <br />
        <div id="datetimepicker12">
        </div>
    </div>
    <div class="separator"></div>
    <div class="rightside">
        @{ if (Model.TimeFrame == "1")
            {
                @await Component.InvokeAsync("DayOfInterest", @Model)
            }
            else
            {
                if (Model.TimeFrame == "2")
                {
                    @await Component.InvokeAsync("WeekOfInterest", @Model)
                }
            }
        }
    </div>
</div>
