@model CalendarE2.Domain.ViewModels.PeriodViewModel
@using  CalendarE2.Domain.ViewModels
<script src="~/js/addUpdateEventBase.js"></script>

    <div id="periodEvents">
        <div class="row">
            <div class="col-md-3 topDate"><span>@Model.Yr.ToString(), @Model.MoStr @Model.Day</span></div>
        </div>
        @await Component.InvokeAsync("AddUpdateModal")
        
        @foreach (RowWithHour rwh in Model.Schedule.RowsOfHour)
        {
            <div class="row eventRow">
                <span>@rwh.DisplayHour.ToString() @rwh.AMPM</span>
                @{
                    <div>
                        <span class="oneSpace"></span>
                        <span class="timeslot actionField" onclick='aUEventDay(this)' data-datet="@rwh.EventsOfHour[0].DateT" data-hour="@rwh.EventsOfHour[0].HourInt"><span class="fa fa-edit"></span></span>
                        <span class="timeslot">@rwh.EventsOfHour[0].Title</span>
                        <span class="col-timeslot">@rwh.EventsOfHour[0].Description</span>
                    </div>
                }
            </div>
        }
    </div>

    <script>

        @*function packFormDay(subjectDate) {
            // fill out form above so we can communicate with the backend with either a create or update
            document.getElementById("modalYr").value = subjectDate.getFullYear();
            document.getElementById("modalMo").value = subjectDate.getMonth();
            document.getElementById("modalDy").value = subjectDate.getDate();
            document.getElementById("modalTimeFrame").value = @Model.TimeFrame;           
        };*@

        function checkUpdateDay (elem) {
            // Check if there is already an entry for the chosen timeslot. If so, then an update.
            if (elem.parentNode.children[3].innerHTML.length > 0) {
                document.getElementById("modalEventTitle").value = elem.parentNode.children[2].innerHTML;
                document.getElementById("modalDescription").value = elem.parentNode.children[3].innerHTML;
            }
        }

        function aUEventDay(elem) {
            // aUEvent in a file in the js directory, used in week functionality as well. Could be used in Monthly functionality, if added.
            aUEvent(elem, packForm, checkUpdateDay);
        }        
    </script>    