@model CalendarE2.Domain.ViewModels.PeriodViewModel
@using  CalendarE2.Domain.ViewModels
<script src="~/js/addUpdateEventBase.js"></script>

<div id="periodEvents">
        <div class="row">
            <div class="col-md-3 topDate"><span>@Model.Yr.ToString(), @Model.MoStr @Model.Day</span></div>
        </div>
        @await Component.InvokeAsync("AddUpdateModal")
    <div class="container pull-left dayAreaColor dayAreaShape" style="width:100%">
        @foreach (RowWithHour rwh in Model.Schedule.RowsOfHour)
        {
        <div class="row focusField dayRowItem">
            <div style="width:1em;"> </div>
            <div class="timecolcolor" style="width:3em;">@rwh.DisplayHour.ToString() @rwh.AMPM</div>
            <div style="width:1em;"> </div>
            <div class="actionField" onclick='aUEventDay(this)' data-datet="@rwh.EventsOfHour[0].DateT" data-hour="@rwh.EventsOfHour[0].HourInt"><span class="fa fa-edit"></span></div>
            <div style="width:1em"> </div>
            <div class="col-3 titleEmphasis"> @rwh.EventsOfHour[0].Title </div>
            <div style="width:1em" >  </div>
            <div class="col-6"> @rwh.EventsOfHour[0].Description </div>
        </div>
        }           
    </div>
</div>

    <script>     
        function checkUpdateDay (elem) {
            // Add or Update appointment / event. To determine, check if there is already an entry for the chosen timeslot. If so, then an update, otherwise an add.
            if (elem.parentNode.children[3].innerHTML.length > 0) {
                document.getElementById("modalEventTitle").value = elem.parentNode.children[5].innerHTML;
                document.getElementById("modalDescription").value = elem.parentNode.children[7].innerHTML;               
            }
        }

        function aUEventDay(elem) {
            // The Day version of launching the Add or Update Modal. There is a Weekly version in the Week View Component and, you could imagine,
            // a Monthly version. In other words, there is a generic function, aUEvent, that takes a specific case function called checkUpdate<day or week>
            // to run the Add or Update Modal. Strategy Design Pattern.    
            aUEvent(elem, packForm, checkUpdateDay);
        }        
    </script>    