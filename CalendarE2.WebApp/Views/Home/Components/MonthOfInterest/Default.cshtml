@model CalendarE2.Domain.ViewModels.PeriodViewModel
@using  CalendarE2.Domain.ViewModels

<div id="periodEvents">
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-3 topDate"><span>@Model.Yr.ToString() , @Model.MoStr @Model.Day</span></div>
    </div>

    <div id="aUModal" class="modal">
        <!-- Modal content -->
        <div class="modal-content">
            <div class="modal-header">
                <span class="close">&times;</span>
                <h2 id="modalTitle">Add Event</h2>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("CreateOrUpdateEvent", "Home", FormMethod.Post))
                {
                    <p>Add an Event the following time</p>
                    <input id="modalEventTitle" required name="newTitle" placeholder="Enter Title of appointment" />
                    <input id="modalDescription" required name="newDescription" placeholder="Enter description" />
                    <input id="modalYr" name="Yr" required style="display:none;" />
                    <input id="modalMo" name="Mo" required style="display:none;" />
                    <input id="modalDy" name="Dy" required style="display:none;" />
                    <input id="displayHr" required readonly="readonly" style="display:block" ; />
                    <input id="modalHr" name="Hour" style="display:none;" />
                    <br />
                    <button type="submit" id="subButton">Submit New Appointment</button>
                    <!--<button type="button" class="modal-dialog" onclick="endModal()">Cancel</button>-->
                }
            </div>
            <div class="modal-footer">
                <hr />
            </div>
        </div>
    </div>    
    @foreach (RowWithHour rwh in Model.Schedule.RowsOfHour)
    {
<div class="row eventRow">
    <span>@rwh.DisplayHour.ToString() @rwh.AMPM</span>              
    @foreach (CalendarE2.Domain.ViewModels.EventVM me in rwh.EventsOfHour)
    {
        <span class="actionField" onclick="addUpdateEvent(this)" data-dateT="@rwh.EventsOfHour[0].DateT" data-assigned-ampm="@rwh.EventsOfHour[0].AMPM"><span class="fa fa-edit"></span></span>
        <span >@me.Title.Substring(0, 8)</span>
    }    
    </div>
    }
</div>

<script>
        var firstClickFlag = false;
        function addUpdateEvent(elem) {
            // sets up / shows modal for add / update
            firstClickFlag = true;

           // fill out form above so we can communicate with the backend with either a create or update
            document.getElementById("modalYr").value = @Model.Yr;
            document.getElementById("modalMo").value = @Model.Mo;
            document.getElementById("modalDy").value = @Model.Day;
            // get hour from the click event to send with form submission
            let dateStr = elem.getAttribute('data-assigned-date');
            let hour = dateStr.substr(0, dateStr.indexOf(':'));
            let hourNumb = parseInt(hour, 10);
            let ampm = elem.getAttribute('data-assigned-ampm');
            if (ampm.indexOf("P") > -1 && hourNumb !== 12) { hourNumb = hourNumb + 12; }
            document.getElementById("modalHr").value = hourNumb;
            document.getElementById("displayHr").value = hour;
            // adjust for update mode, fill form with current values, change modal title and submit button
            if (elem.parentNode.children[3].innerHTML.length > 0) {
                document.getElementById("modalEventTitle").value = elem.parentNode.children[2].innerHTML;
                document.getElementById("modalDescription").value = elem.parentNode.children[3].innerHTML;
                document.getElementById("modalTitle").innerHTML = "Edit Event";
                document.getElementById("subButton").innerHTML = "Submit Edit";
            }

            // show the Add or Updated modal based on whether the model has an event for the timeslot
            document.getElementById("aUModal").style.display = 'block';
        };

        function endModal() {
            console.log("in End Modal()");
            document.getElementById("aUModal").style.display = "none";
        }

        window.onclick = function (event) {
            if (firstClickFlag == true) {
                // click to set up modal
                firstClickFlag = false;
            }
            else {
                if (event.target.parentNode.tagName != "FORM" && event.target.tagName != "FORM") {
                    document.getElementById("aUModal").style.display = "none";
                    //console.log("click outside form ");
                }
            }
        }
</script>    